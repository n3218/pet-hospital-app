{"version":3,"sources":["components/AddAppointments.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","state","petName","ownerName","aptNotes","aptDate","aptTime","handleChange","bind","handleAdd","e","target","value","name","this","setState","preventDefault","tempApt","props","addAppointment","toggleForm","className","formDisplay","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","ListAppointments","appointments","map","item","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","date","parse","format","App","myAppointments","lastIndex","qtext","apt","tempApts","without","unshift","order","dir","val","findIndex","fetch","then","response","json","result","apts","filteredApts","sort","a","b","toLowerCase","filter","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1c7210d8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FaPlus } from 'react-icons/fa';\n\nclass AddAppointments extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            petName: '',\n            ownerName: '',\n            aptNotes: '',\n            aptDate: '',\n            aptTime: ''\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleAdd = this.handleAdd.bind(this)\n    }\n\n    handleChange(e) {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleAdd(e) {\n        e.preventDefault();\n        let tempApt = {\n            petName: this.state.petName,\n            ownerName: this.state.ownerName,\n            aptNotes: this.state.aptNotes,\n            aptDate: this.state.aptDate + ' ' + this.state.aptTime \n        }\n        this.props.addAppointment(tempApt)\n        this.state = {\n            petName: '',\n            ownerName: '',\n            aptNotes: '',\n            aptDate: '',\n            aptTime: ''\n        }\n        this.props.toggleForm();\n    }\n\n    render() {\n        return (\n            <div className={\n                'card textcenter mt-3 ' +\n                (this.props.formDisplay ? '' : 'add-appointment')}>\n                <div className=\"apt-addheading card-header bg-primary text-white\"\n                    onClick={this.props.toggleForm}>\n                    <FaPlus /> Add Appointment\n                </div>\n\n                <div className=\"card-body\">\n                    <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\n                        <div className=\"form-group form-row\">\n                            <label className=\"col-md-2 col-form-label text-md-right\"\n                                htmlFor=\"petName\"\n                                readOnly >\n                                Pet Name\n                            </label>\n                            <div className=\"col-md-10\">\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"petName\"\n                                    placeholder=\"Pet's Name\"\n                                    value={this.state.petName}\n                                    onChange={this.handleChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group form-row\">\n                            <label className=\"col-md-2 col-form-label text-md-right\"\n                                htmlFor=\"ownerName\" >\n                                Pet Owner\n                            </label>\n                            <div className=\"col-md-10\">\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"ownerName\"\n                                    placeholder=\"Owner's Name\" \n                                    value={this.state.ownerName}\n                                    onChange={this.handleChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group form-row\">\n                            <label className=\"col-md-2 col-form-label text-md-right\"\n                                htmlFor=\"aptDate\" >\n                                Date\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"date\"\n                                    className=\"form-control\"\n                                    name=\"aptDate\"\n                                    id=\"aptDate\" \n                                    value={this.state.aptDate}\n                                    onChange={this.handleChange} />\n                            </div>\n                            <label\n                                className=\"col-md-2 col-form-label text-md-right\"\n                                htmlFor=\"aptTime\" >\n                                Time\n                            </label>\n                            <div className=\"col-md-4\">\n                                <input type=\"time\"\n                                    className=\"form-control\"\n                                    name=\"aptTime\"\n                                    id=\"aptTime\" \n                                    value={this.state.aptTime}\n                                    onChange={this.handleChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group form-row\">\n                            <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\n                                Apt. Notes\n                            </label>\n                            <div className=\"col-md-10\">\n                                <textarea className=\"form-control\"\n                                    rows=\"4\"\n                                    cols=\"50\"\n                                    name=\"aptNotes\"\n                                    id=\"aptNotes\"\n                                    placeholder=\"Appointment Notes\"\n                                    value={this.state.aptNotes}\n                                    onChange={this.handleChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group form-row mb-0\">\n                            <div className=\"offset-md-2 col-md-10\">\n                                <button type=\"submit\" className=\"btn btn-primary d-block ml-auto\" >\n                                    Add Appointment\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddAppointments;","import React, { Component } from 'react';\n\nclass SearchAppointments extends Component {\n    render() {\n        return (\n            <div className=\"search-appointments row justify-content-center my-4\">\n                <div className=\"col-md-6\">\n                    <div className=\"input-group\">\n                        <input id=\"SearchApts\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            aria-label=\"Search Appointments\" \n                            onChange={e => this.props.searchApts(e.target.value)} />\n                        <div className=\"input-group-append\">\n                            <button type=\"button\"\n                                className=\"btn btn-primary dropdown-toggle\"\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\" >\n                                Sort by: <span className=\"caret\" />\n                            </button>\n\n                            <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\n                                <button className={'sort-by dropdown-item' + \n                                    (this.props.orderBy === 'petName' ? ' active' : '')}\n                                    onClick={(e => this.props.changeOrder('petName', this.props.orderDir)) }\n                                    href=\"#\" >\n                                    Pet Name\n                                </button>\n                                <button className={'sort-by dropdown-item' + \n                                    (this.props.orderBy === 'aptDate' ? ' active' : '')}\n                                    onClick={(e => this.props.changeOrder('aptDate', this.props.orderDir)) }\n                                    href=\"#\" >\n                                    Date\n                                </button>\n                                <button className={'sort-by dropdown-item' + \n                                    (this.props.orderBy === 'ownerName' ? ' active' : '')}\n                                    onClick={(e => this.props.changeOrder('ownerName', this.props.orderDir)) }\n                                    href=\"#\" >\n                                    Owner\n                                </button>\n                                <div role=\"separator\" className=\"dropdown-divider\" />\n                                <button className={'sort-by dropdown-item' + \n                                    (this.props.orderDir === 'asc' ? ' active' : '')}\n                                    onClick={(e => this.props.changeOrder(this.props.orderBy, 'asc')) }\n                                    href=\"#\" >\n                                    Asc\n                                </button>\n                                <button className={'sort-by dropdown-item' + \n                                    (this.props.orderDir === 'desc' ? ' active' : '')}\n                                    onClick={(e => this.props.changeOrder(this.props.orderBy, 'desc')) }\n                                    href=\"#\" >\n                                    Desc\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchAppointments;","import React, { Component } from 'react';\nimport { FaTimes } from \"react-icons/fa\";\nimport Moment from 'react-moment';\n\nclass ListAppointments extends Component {\n    render() {\n        const listItems = this.props.appointments.map(item => (\n            <div>\n                <div>{item.petName}</div>\n                <div>{item.ownerName}</div>\n            </div>\n        ))\n        return (\n            <div className=\"appointment-list item-list mb-3\">\n                {this.props.appointments.map(item => (\n                    <div key={item.aptId} className=\"pet-item col media py-3 my-1 border border-1 border-info rounded\">\n                        <div className=\"mr-3\">\n                            <button className=\"pet-delete btn btn-sm btn-danger\"\n                                onClick={() => this.props.deleteAppointment(item)} >\n                                <FaTimes />\n                            </button>\n                        </div>\n\n                        <div className=\"pet-info media-body\">\n                            <div className=\"pet-head d-flex\">\n                                #{item.aptId}&nbsp;&nbsp;\n                                <span className=\"pet-name\"\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onBlur={e => this.props.updateInfo('petName', e.target.innerText, item.aptId)} >\n                                    {item.petName}\n                                </span>\n                                <span className=\"apt-date ml-auto\">\n                                    <Moment date={item.aptDate}\n                                        parse=\"YYYY-MM-DD hh:mm\"\n                                        format=\"MMM-D h:mma\" />\n                                </span>\n                            </div>\n\n                            <div className=\"owner-name\">\n                                <span className=\"label-item\">Owner: </span>\n                                <span contentEditable\n                                    suppressContentEditableWarning\n                                    onBlur={e => this.props.updateInfo('ownerName', e.target.innerText, item.aptId)} >\n                                    {item.ownerName}\n                                </span>\n                            </div>\n                            <div className=\"apt-notes\"\n                                contentEditable\n                                suppressContentEditableWarning\n                                onBlur={e => this.props.updateInfo('aptNotes', e.target.innerText, item.aptId)} >\n                                {item.aptNotes}\n                            </div>\n                        </div>\n                    </div>\n\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default ListAppointments;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AddAppointments from './AddAppointments'\nimport SearchAppointments from './SearchAppointments'\nimport ListAppointments from './ListAppointments'\nimport {without, findIndex} from 'lodash';\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      myAppointments: [],\n      lastIndex: 0,\n      formDisplay: false,\n      orderBy: 'petName',\n      orderDir: 'asc',\n      qtext: ''\n    }\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n    this.updateInfo = this.updateInfo.bind(this);\n  }\n\n  deleteAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts, apt);\n    // tempApts = tempApts.filter( item => item !== apt )\n    this.setState({\n      myAppointments: tempApts\n    })\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    })\n  }\n\n  addAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    apt.aptId = this.state.lastIndex;\n    tempApts.unshift(apt);\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1\n    })\n  }\n\n  changeOrder(order, dir) {\n    this.setState({\n      orderBy: order,\n      orderDir: dir\n    })\n  }\n\n  searchApts(val) {\n    this.setState({\n      qtext: val\n    })\n  }\n\n  updateInfo(name, value, id) {\n    let tempApts = this.state.myAppointments;\n    let aptIndex = findIndex(this.state.myAppointments, { aptId: id});\n    tempApts[aptIndex][name] = value;\n    this.setState({\n      myAppointments: tempApts\n    })\n\n  }\n\n  componentDidMount() {\n    fetch('./data.json')\n    .then(response => response.json())\n    .then(result => {\n      const apts = result.map(item => {\n        item.aptId = this.state.lastIndex\n        this.setState({ lastIndex: this.state.lastIndex + 1})\n        return item\n      })\n      this.setState({\n        myAppointments: apts\n      })    \n    })\n  }\n\n  render() {\n\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if(this.state.orderDir == 'asc') {\n      order = 1\n    } else {\n      order=-1\n    }\n\n    filteredApts = filteredApts.sort((a,b) => {\n      if (a[this.state.orderBy].toLowerCase() < \n          b[this.state.orderBy].toLowerCase()) {\n        return -1 * order\n      } else {\n        return 1 * order\n      }\n    }).filter(item => item['petName'].toLowerCase().includes(this.state.qtext.toLowerCase()) ||\n                      item['ownerName'].toLowerCase().includes(this.state.qtext.toLowerCase()) ||\n                      item['aptNotes'].toLowerCase().includes(this.state.qtext.toLowerCase())\n    )\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments \n                  toggleForm={this.toggleForm}\n                  formDisplay={this.state.formDisplay}\n                  addAppointment={this.addAppointment} />\n                <SearchAppointments \n                  orderBy = {this.state.orderBy}\n                  orderDir = {this.state.orderDir}\n                  changeOrder={this.changeOrder}\n                  searchApts={this.searchApts} />\n                <ListAppointments \n                  appointments={filteredApts} \n                  deleteAppointment={this.deleteAppointment}\n                  updateInfo={this.updateInfo} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}